#!/bin/bash

# Usage: ldapgroup groupname [-e email@example.com]

GROUP_NAME=$1
shift

EMAIL=""
while getopts "e:" opt; do
  case $opt in
    e) EMAIL="$OPTARG"
    ;;
  esac
done

# --- CONFIGURATION SECTION ---
LDAP_SERVER="ldap://your.ldap.server"
BIND_DN="cn=admin,dc=example,dc=com"
BIND_PWD="your_password"
BASE_DN="ou=Groups,dc=example,dc=com"
# -----------------------------

TMP_FILE="/tmp/ldapgroup_output_$$.csv"
> "$TMP_FILE"

ldapsearch -LLL -x -H "$LDAP_SERVER" -D "$BIND_DN" -w "$BIND_PWD" -b "$BASE_DN" "(cn=$GROUP_NAME)" member |
grep "^member: CN=" |
while read -r line; do
    # Extract just the CN=... portion
    cn_entry=$(echo "$line" | sed 's/^member: //' | awk -F', ' '{print $1}')
    
    # Format using your proven awk command
    formatted=$(echo "$cn_entry" | awk -F'[=,] *' '{gsub(/\\/,"",$2); n=split($3,a," "); for(i=1;i<n;i++) printf("%s ",a[i]); printf("%s, %s\n",$2,a[n])}')
    
    echo "$formatted" >> "$TMP_FILE"
done

# Sort the output alphabetically
sort -o "$TMP_FILE" "$TMP_FILE"

# Output to terminal
cat "$TMP_FILE"

# Email if requested
if [ -n "$EMAIL" ]; then
    mail -s "LDAP Group Member Report: $GROUP_NAME" "$EMAIL" < "$TMP_FILE"
    echo "Report sent to $EMAIL"
fi

# Cleanup
rm -f "$TMP_FILE"

========================================


======================

awk -F'[=,] *' '{gsub(/\\/,"",$2); n=split($3,a," "); for(i=1;i<n;i++) printf("%s ",a[i]); printf("%s, %s\n",$2,a[n])}'

