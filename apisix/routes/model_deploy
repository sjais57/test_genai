"serverless-pre-function": { "phase": "access", "functions": [ "return function(conf, ctx) local jwt = require('resty.jwt') local core = require('apisix.core') local auth_header = ngx.var.http_authorization if not auth_header then core.log.warn('No Authorization header found') return end local token = auth_header:match('Bearer%s+(.+)') if not token then core.log.warn('No Bearer token found in Authorization header') return end local decoded = jwt:load_jwt(token) if not decoded.valid then core.log.warn('Invalid JWT token') return end local claims = decoded.payload or {} local aihpc_auth_tkn = claims.aihpc_auth_tkn if aihpc_auth_tkn then core.log.info('Extracted aihpc_auth_tkn from JWT, setting upstream Authorization header') core.request.set_header(ctx, 'Authorization', 'Bearer ' .. aihpc_auth_tkn) else core.log.warn('aihpc_auth_tkn not found in JWT payload') end end" ] }
