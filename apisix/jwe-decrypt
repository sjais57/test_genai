local core = require("apisix.core")
local plugin_name = "jwe-decrypt"

local _M = {
    version = 0.1,
    priority = 2520,
    name = plugin_name,
    schema = true,
}

function _M.access(conf, ctx)
    core.log.warn("=== [JWE-DECRYPT] Plugin triggered: decrypting JWE token ===")

    local auth_header = core.request.header(ctx, conf.header or "Authorization")
    if not auth_header then
        core.log.warn("[JWE-DECRYPT] No Authorization header found")
        return
    end

    -- Extract JWE token
    local token = auth_header:match("Bearer%s+(.+)")
    if not token then
        core.log.warn("[JWE-DECRYPT] Bearer token missing in Authorization header")
        return
    end

    core.log.warn("[JWE-DECRYPT] Starting decryption for token prefix: " .. token:sub(1, 20) .. "...")

    -- (existing decryption logic here)
    -- After successful decryption:
    core.log.warn("[JWE-DECRYPT] Token successfully decrypted")

    return
end

return _M
