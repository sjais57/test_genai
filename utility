#!/bin/bash

set -e

SCRIPT_NAME="script"

usage() {
cat << EOF
Usage: $SCRIPT_NAME [OPTIONS]

Creates a Python virtual environment in /workspace/\$USER/envs and registers it as a Jupyter kernel.

Options:
  --pvt [VENV_NAME]   Create a Python virtual environment named VENV_NAME.
                      If VENV_NAME is not provided, you will be prompted.
  -h, --help          Show this help message and exit.

Examples:
  $SCRIPT_NAME --pvt myenv
  $SCRIPT_NAME --pvt
  $SCRIPT_NAME --help

EOF
}

# No arguments or help
if [[ $# -eq 0 ]] || [[ "$1" == "-h" || "$1" == "--help" ]]; then
    usage
    exit 0
fi

# Handle --pvt argument
if [[ "$1" == "--pvt" ]]; then
    if [[ -z "$2" ]]; then
        read -p "Enter the name of the Python virtual environment: " VENV_NAME
        if [ -z "$VENV_NAME" ]; then
            echo "Virtual environment name cannot be empty."
            exit 1
        fi
    else
        VENV_NAME="$2"
    fi
else
    usage
    exit 1
fi

BASE_DIR="/workspace/$USER"
VENV_PATH="$BASE_DIR/envs/$VENV_NAME"

# Create base/envs directory if it doesn't exist
mkdir -p "$BASE_DIR/envs"

# Check if virtual environment already exists
if [ -d "$VENV_PATH" ]; then
  echo "Virtual environment '$VENV_NAME' already exists at $VENV_PATH"
  exit 1
fi

# Create virtual environment
if ! python3 -m venv "$VENV_PATH"; then
  echo "Failed to create virtual environment."
  exit 1
fi

echo "Virtual environment created at: $VENV_PATH"

# Activate the virtual environment
# shellcheck source=/dev/null
source "$VENV_PATH/bin/activate"

# Upgrade pip and install ipykernel
echo "Installing pip and ipykernel..."
pip install --upgrade pip >/dev/null
pip install ipykernel >/dev/null

# Add Jupyter kernel with same name
if python -m ipykernel install --user --name="$VENV_NAME" --display-name="Python ($VENV_NAME)" >/dev/null; then
  echo "Kernel 'Python ($VENV_NAME)' added successfully."
else
  echo "Failed to create Jupyter kernel."
  deactivate
  exit 1
fi

# Deactivate virtual environment
deactivate

echo
echo "To activate this environment manually later, run:"
echo "   source \"$VENV_PATH/bin/activate\""
